function meta_4() {
    const text = `<h1>Тема, Мета</h1>
        <p>Тема : ФУНКЦІОНАЛЬНЕ ЗАСТОСУВАННЯ JAVASCRIPT У HTML-ДОКУМЕНТІ.КЛАСИ,ОБ’ЄКТИ, ФУНКЦІЇ,  В МОВІ JAVASCRIPT. ПОДІЇ ТА ОБРОБКА ПОДІЙ.ПРОГРАМНА ВЗАЄМОДІЯ З HTML ДОКУМЕНТАМИ НА ОСНОВІ DOM АРІ.</p>
        <p>Мета : придбати практичні навички роботи маніпулювання інформаційним вмістом Web-документа засобами мови Javasсript, використання об’єктів,масивів, функцій, подій, обробників подій у сценаріях на мові JavaScript</p>`;
    changeText(text);
}

function vlad4() {
    const text = `<h1>Влад</h1>
        <h2>Завдання 1:</h2>
        <img src="lab_img/task1V4.png">
        <div style="text-align: left">
            <h4>Сортування бульбашкою</h4>
            <p style="text-align: left">Алгоритм дуже простий, і як зазвичай буває в цьому світі, простота та ефективність алгоритмів є зворотньо пропорційними величинами. Тому обчислювальна складність цього алгоритму виглядає наступним чином:  
</p><h4>Короткий опис алгоритму:</h4>
      <p style="text-align: left">Він послідовно порівнює значення сусідніх елементів і міняє їх місцями, якщо наступне виявляється меншим за попереднє. Таким чином, елементи з найбільшим значенням опиняються в кінці масиву. На малюнку нижче наведено Java-код цього алгоритму.</p>
        </div>
        <h2>Результат:</h2>
        <img src="lab_img/result1V4.png">
        <br>
        <h2>Завдання 2:</h2>
        <img src="lab_img/task2V4.png">
        <h2>Результат:</h2>
        <img src="lab_img/result2V4.png">   
`;

    changeText(text);
}

function misha4() {
    const text = `<h1>Міша</h1>
        <h2>Завдання 1:</h2>
        <img src="lab_img/task1M4.png">
        <div style="text-align: left">
            <h4>Швидке сортування</h4>
            <h4>Короткий опис алгоритму:</h4>
            <ul>
                <li>вибрати елемент, званий опорним.</li>
                <li>порівняти всі інші елементи з опорним, на підставі порівняння розбити безліч на три - "менші опорного", "рівні" і "великі", розташувати їх у порядку менші-рівні-великі.</li>
                <li>повторити рекурсивно для "менших" і "великих".</li>
            </ul>
            <h4>Переваги і недоліки:</h4>
            <ol>
                <li>Один з самих швидкодіючих (на практиці) з алгоритмів внутрішнього сортування загального призначення.</li>
                <li>Простий в реалізації.</li>
                <li>Вимагає лише O (lg n) додаткової пам'яті для своєї роботи. (Не покращений рекурсивний алгоритм в гіршому випадку O (n) пам'яті)</li>
                <li>Добре поєднується з механізмами кешування і віртуальної пам'яті.</li>
                <li>Існує ефективна модифікація (алгоритм Седжвіка) для сортування рядків - спочатку порівняння з опорним елементом тільки по нульовому символу рядка, далі застосування аналогічної сортування для "більшого" і "меншого" масивів теж по нульовому символу, і для "рівного" масиву по вже першого символу.</li>
                <li>Працює на пов'язаних списках та інших структурах з послідовним доступом.</li>
            </ol>
        </div>
        <h3>HTML:</h3>
        <img src="lab_img/lab4_htmM.png">
        <h3>JS:</h3>
        <img src="lab_img/lab4_jsM.png">
        <h2>Результат:</h2>
        <img src="lab_img/result1M4.png">
        <br>
        <h2>Завдання 2:</h2>
        <img src="lab_img/task2M4.png">
        <h3>HTML:</h3>
        <img src="lab_img/lab4_2html.png">
        <h2>Результат:</h2>
        <img src="lab_img/result2M4.png">   
`;

    changeText(text);
}

function denys4() {
    const text = `<h1>Денис</h1>
        <h2>Завдання 1:</h2>
        <img src="lab_img/task1D4.png">
        <div style="text-align: left">
            <h4>Сортування вибором - простий алгоритм сортування лінійного масиву, на основі вставок. Має ефективність n2, що робить його неефективним при сортування великих масивів, і в цілому, менш ефективним за подібний алгоритм сортування включенням. Сортування вибором вирізняється більшою простотою, ніж сортування включенням, і в деяких випадках, вищою продуктивністю.</h4>
            <h4>Короткий опис алгоритму:</h4>
            <ul>
                <li>Знаходить у списку найменше значення</li>
                <li>Міняє його місцями із першим значеннями у списку</li>
                <li>Повторює два попередніх кроки, доки список не завершиться (починаючи з наступної позиції)</li>
            </ul>
        </div>
        <h2>Результат:</h2>
        <img src="lab_img/result1D4.png">
        <br>
        <h2>Завдання 2:</h2>
        <img src="lab_img/task2D4.png">
        <h2>Результат:</h2>
        <img src="lab_img/result2D4.png">   
`;

    changeText(text);
}

function bohdan4() {
    const text = `<h1>Богдан</h1>
        <h2>Завдання 1:</h2>
        <img src="lab_img/task1B4.png">
        <div style="text-align: left">
            <h4>Сортування вибором - простий алгоритм сортування лінійного масиву, на основі вставок. Має ефективність n2, що робить його неефективним при сортування великих масивів, і в цілому, менш ефективним за подібний алгоритм сортування включенням. Сортування вибором вирізняється більшою простотою, ніж сортування включенням, і в деяких випадках, вищою продуктивністю.</h4>
            <h4>Короткий опис алгоритму:</h4>
            <ul>
                <li>Знаходить у списку найменше значення</li>
                <li>Міняє його місцями із першим значеннями у списку</li>
                <li>Повторює два попередніх кроки, доки список не завершиться (починаючи з наступної позиції)</li>
            </ul>
        </div>
        <h2>Результат:</h2>
        <img src="lab_img/lab4B/result1B4.png">
        <h3>HTML-код: </h3>
        <img src="lab_img/lab4B/HTMLcodeT1p1.png">
        <img src="lab_img/lab4B/HTMLcodeT1p2.png">
        <h3>CSS-код: </h3>
        <img src="lab_img/lab4B/CSScodeT1.png">
        <br>
        <h2>Завдання 2:</h2>
        <img src="lab_img/task2B4.png">
        <h2>Результат:</h2>
        <img src="lab_img/lab4B/result2B4.png">   
         <h3>HTML-код: </h3>
        <img src="lab_img/lab4B/HTMLcodeT2p1.png">
        <img src="lab_img/lab4B/HTMLcodeT2p2.png">
        <h3>CSS-код: </h3>
        <img src="lab_img/lab4B/CSScodeT2p1.png">
        <img src="lab_img/lab4B/CSScodeT2p2.png">
`;

    changeText(text);
}

function mainsite4() {
    const text = `<h1>Сайт</h1>
        <h2>Завдання:</h2>
        <img src="lab_img/siteTASK.png">
        <div style="text-align: left">
            <h4>Гіпертекстове посилання (схема URL):</h4>
            <div>Гіперпосилання, або просто посила́ння — активний текст, зображення чи кнопка на вебсторінці, натиснення на яку (активізація гіперпосилання) викликає перехід на іншу сторінку чи іншу частину поточної сторінки.</div>
            <img src="lab_img/href_lab4.png">
            <h4>Handler:</h4>
            <div>Подія – це сигнал від браузера у тому, що щось сталося. Всі DOM-вузли подають такі сигнали (хоча події бувають не тільки в DOM).</div>
            <img src="lab_img/handler_lab4.png">
            <h4>Підстановка (entity):</h4>
            <div>Підстановка ( entity ) зустрічається на Web-сторінках досить рідко. Тим не менш, це досить потужний інструмент генерації HTML-сторінки на стороні браузера. Підстановки використовуються як значення атрибутів HTML-контейнерів. </div>
            <img src="lab_img/entity_lab4.png">
            <h4>Вставка (тег SCRIPT)</h4>
            <div>Тег script призначений для опису скриптів, може містити посилання на програму або її текст певною мовою. Скрипти можуть розміщуватися у зовнішньому файлі та зв'язуватися з будь-яким HTML-документом. Такий підхід дозволяє використовувати одні й самі загальні функції багатьох веб-сторінках і прискорює їх завантаження, т.к. зовнішній файл кешується при першому завантаженні, і скрипт викликається швидше за наступних дзвінків.
script може розташовуватись у заголовку або тілі HTML-документа у необмеженій кількості. Найчастіше місце розташування скрипта не позначається роботу програми. Однак скрипти, які повинні виконуватися в першу чергу, зазвичай розміщують у заголовку документа.</div>
            <img src="lab_img/script_lab4.png">
        </div>
        <h2>Результат:</h2>
        <img src="lab_img/site_result_lab4.png">
       
`;
    changeText(text);
}

function itog_4() {
    const text = `<h1>Висновок</h1>
        <p style="text-align:justify;">На лабораторній роботі №4 ми придбали практичні навички роботи маніпулювання інформаційним вмістом Web-документа засобами мови Javasсript, використання об’єктів,масивів, функцій, подій, обробників подій у сценаріях на мові JavaScript</p>`
    changeText(text);
}

